
plugins {
  id "com.jfrog.bintray" version "1.7"
}

ext {
  globalVersion = file('version.txt').text
}

group = 'org.pageseeder.webhook.client'
description = "$title"
version     = "$globalVersion"

allprojects {
  group   = 'org.pageseeder.webhook.client'
  version = "$globalVersion"

  apply plugin: 'java'
  apply plugin: 'com.jfrog.bintray'
  apply plugin: 'eclipse'
  apply plugin: 'maven-publish'
  apply from: "$rootDir/gradle/publishing.gradle"

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
    maven { url 'http://dl.bintray.com/pageseeder/maven' }
    jcenter()
    ivy {
      url 'http://ivy.pageseeder.com/shared'
      layout 'pattern', {
        artifact '[organisation]/[module]/[artifact]-[revision](.[ext])'
        ivy '[organisation]/[module]/ivy-[revision].xml'
      }
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.7'
}

task publishAllToBintray (group: "allette"){
  allprojects.each {
    dependsOn("${it.path}:bintrayUpload" )
  }
}

task publishAllToMavenLocal (group: "allette"){
  allprojects.each {
    dependsOn("${it.path}:publishToMavenLocal" )
  }
}

// Dependencies for your production and test code
dependencies {

  // The production code uses the SLF4J logging API at compile time
  compile (
    'org.slf4j:slf4j-api:1.7.12',
    'javax.servlet:javax.servlet-api:3.1.0',
    'org.eclipse.jdt:org.eclipse.jdt.annotation:2.0.0'
  )

  // Test dependencies
  testCompile (
    'junit:junit:4.12',
  )
}

// To preserve Eclipse Null annotations when updating libs
eclipse {
  classpath {
    file {
      whenMerged { classpath ->
        if (project.hasProperty('eclipseAnnotationPath')) {
          classpath.entries.forEach({
            if (it.kind == 'con' || it.kind == 'lib') {
              it.entryAttributes.put('annotationpath', "$eclipseAnnotationPath")
            }
          })
        }
      }
    }
  }
}